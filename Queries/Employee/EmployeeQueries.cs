
namespace Api.Queries
{
    public class EmployeeQueries
    {
        public string Add { get; } = "INSERT INTO Employee (JobId, StatusId, MaritalStatusId, DocTypeId, DocIssueCityId, ContractTypeId, JobCityId, BankingEntityId, Doc, DocIssueDate, Name, Sex, BirthDate, Rh, CorpCellphone, Cellphone, Phone, Email, EmploymentDate, BankAccount, BankAccountType, HasVaccine, VaccineMaker, VaccineDose, HasVaccineBooster) VALUES (@JobId, @StatusId, @MaritalStatusId, @DocTypeId, @DocIssueCityId, @ContractTypeId, @JobCityId, @BankingEntityId, @Doc, @DocIssueDate, @Name, @Sex, @BirthDate, @Rh, @CorpCellphone, @Cellphone, @Phone, @Email, @EmploymentDate, @BankAccount, @BankAccountType, @HasVaccine, @VaccineMaker, @VaccineDose, @HasVaccineBooster);";
        public string Edit { get; } = "UPDATE Employee SET JobId = @JobId, StatusId = @StatusId, MaritalStatusId = @MaritalStatusId, DocTypeId = @DocTypeId, DocIssueCityId = @DocIssueCityId, ContractTypeId = @ContractTypeId, JobCityId = @JobCityId, BankingEntityId = @BankingEntityId, Doc = @Doc, DocIssueDate = @DocIssueDate, Name = @Name, Sex = @Sex, BirthDate = @BirthDate, Rh = @Rh, CorpCellphone = @CorpCellphone, Cellphone = @Cellphone, Phone = @Phone, Email = @Email, EmploymentDate = @EmploymentDate, BankAccount = @BankAccount, BankAccountType = @BankAccountType, HasVaccine = @HasVaccine, VaccineMaker = @VaccineMaker, VaccineDose = @VaccineDose, HasVaccineBooster = @HasVaccineBooster WHERE Id = @Id";
        public string UpdatePhotoUrl { get; } = "UPDATE Employee SET PhotoUrl = @PhotoUrl WHERE Id = @Id";
        public string AddGeneral { get; } = "INSERT INTO Employee_General (CityId, HousingTypeId, TransportationId, EmergencyContactName, EmergencyContactPhone, EmergencyContactRelationship, Dependents, DependentsUnder9, DependentBirthDate, Address, Neighborhood, HousingTime, SocioeconomicStatus, LicensePlate, VehicleMark, VehicleModel, LicenseNumber, LicenseCategory, LicenseValidity, SOATExpirationDate, RTMExpirationDate, VehicleOwnerName, ContributorType, Eps, Arl, Afp, RecommendedBy, Description) VALUES (@CityId, @HousingTypeId, @TransportationId, @EmergencyContactName, @EmergencyContactPhone, @EmergencyContactRelationship, @Dependents, @DependentsUnder9, @DependentBirthDate, @Address, @Neighborhood, @HousingTime, @SocioeconomicStatus, @LicensePlate, @VehicleMark, @VehicleModel, @LicenseNumber, @LicenseCategory, @LicenseValidity, @SOATExpirationDate, @RTMExpirationDate, @VehicleOwnerName, @ContributorType, @Eps, @Arl, @Afp, @RecommendedBy, @Description); SELECT LAST_INSERT_ID();";
        public string EditGeneral { get; } = "UPDATE Employee_General SET CityId = @CityId, HousingTypeId = @HousingTypeId, TransportationId = @TransportationId, EmergencyContactName = @EmergencyContactName, EmergencyContactPhone = @EmergencyContactPhone, EmergencyContactRelationship = @EmergencyContactRelationship, Dependents = @Dependents, DependentsUnder9 = @DependentsUnder9, DependentBirthDate = @DependentBirthDate, Address = @Address, Neighborhood = @Neighborhood, HousingTime = @HousingTime, SocioeconomicStatus = @SocioeconomicStatus, LicensePlate = @LicensePlate, VehicleMark = @VehicleMark, VehicleModel = @VehicleModel, LicenseNumber = @LicenseNumber, LicenseCategory = @LicenseCategory, LicenseValidity = @LicenseValidity, SOATExpirationDate = @SOATExpirationDate, RTMExpirationDate = @RTMExpirationDate, VehicleOwnerName = @VehicleOwnerName, ContributorType = @ContributorType, Eps = @Eps, Arl = @Arl, Afp = @Afp, RecommendedBy = @RecommendedBy, Description = @Description WHERE Id = @Id;";
        public string AddAcademic { get; } = "INSERT INTO Employee_Academic (EducationalLevelId, Career) VALUES (@EducationalLevelId, @Career); SELECT LAST_INSERT_ID();";
        public string EditAcademic { get; } = "UPDATE Employee_Academic SET EducationalLevelId = @EducationalLevelId, Career = @Career WHERE Id = @Id";
        public string AddFile { get; } = "INSERT INTO Employee_File (EmployeeId, Department, Name, City, Level1, Level2, Level3, Url, FileName) VALUES (@EmployeeId, @Department, @Name, @City, @Level1, @Level2, @Level3, @Url, @FileName); SELECT LAST_INSERT_ID();";
        public string EmployeesWithoutPages { get; } = "SELECT E.Id, D.Name AS DepartmentName, J.Name AS JobName, C.Hex AS ColorHex, E.Name, E.CellPhone, E.Email, IF(E.PhotoUrl IS NULL, NULL, CONCAT('https://hrprueba.s3.us-east-2.amazonaws.com/', E.PhotoUrl)) AS PhotoUrl, 0 AS Pages FROM Employee E LEFT JOIN Job J ON E.JobId = J.Id LEFT JOIN Department D ON J.DepartmentId = D.Id LEFT JOIN Color C ON D.ColorId = C.Id WHERE E.Id <> @EmployeeId ORDER BY E.Name";
        public string EmployeesDownloadBase { get; } = "SELECT E.Id, J.Name AS JobName, D.Name AS DepartmentName, ES.Name AS StatusName, MS.Name AS MaritalStatusName, DT.Name AS DocTypeName, DIC.Name AS DocIssueCityName, CT.Name AS ContractTypeName, BE.Name AS BankingEntityName, JC.Name AS JobCityName, E.Doc, E.DocIssueDate, E.Name, E.Sex, E.BirthDate, E.Rh, E.CorpCellPhone, E.CellPhone, E.Phone, E.Email, E.EmploymentDate, E.BankAccount, E.BankAccountType, E.HasVaccine, E.VaccineMaker, E.VaccineDose, E.HasVaccineBooster, C.Name AS CityName, HT.Name AS HousingTypeName, T.Name AS TransportationName, EG.EmergencyContactName, EG.EmergencyContactPhone, EG.EmergencyContactRelationship, EG.Address, EG.Neighborhood, EG.HousingTime, EG.SocioeconomicStatus, EG.LicensePlate, EG.VehicleMark, EG.VehicleModel, EG.LicenseNumber, EG.LicenseCategory, EG.LicenseValidity, EG.SOATExpirationDate, EG.RTMExpirationDate, EG.VehicleOwnerName, EG.ContributorType, EG.Eps, EG.Arl, EG.Afp, EG.RecommendedBy, EG.Description, EL.Name AS EducationalLevelName, EA.Career FROM Employee E LEFT JOIN Job J ON J.Id = E.JobId LEFT JOIN Department D ON D.Id = J.DepartmentId LEFT JOIN Marital_Status MS ON MS.Id = E.MaritalStatusId LEFT JOIN Doc_Type DT ON DT.Id = E.DocTypeId LEFT JOIN City DIC ON DIC.Id = E.DocIssueCityId LEFT JOIN City JC ON JC.Id = E.JobCityId LEFT JOIN Contract_Type CT ON CT.Id = E.ContractTypeId LEFT JOIN Banking_Entity BE ON BE.Id = E.BankingEntityId LEFT JOIN Employee_Status ES ON ES.Id = E.StatusId LEFT JOIN Employee_General EG ON EG.Id = E.GeneralId LEFT JOIN City C ON C.Id = EG.CityId LEFT JOIN Housing_Type HT ON HT.Id = EG.HousingTypeId LEFT JOIN Transportation T ON T.Id = EG.TransportationId LEFT JOIN Employee_Academic EA ON EA.Id = E.AcademicId LEFT JOIN Educational_Level EL ON EL.Id = EA.EducationalLevelId";
        public string AddKnowledge { get; } = "INSERT INTO Employee_Knowledges (EmployeeId, KnowledgeId, Active, Rate) VALUES (@EmployeeId, @KnowledgeId, @Active, @Rate)";
        public string AddSkill { get; } = "INSERT INTO Employee_Skills (EmployeeId, SkillId, Active, Rate) VALUES (@EmployeeId, @SkillId, @Active, @Rate)";
        public string EditKnowledge { get; } = "UPDATE Employee_Knowledges SET Active = @Active, Rate = @Rate WHERE EmployeeId = @EmployeeId AND KnowledgeId = @KnowledgeId";
        public string EditSkill { get; } = "UPDATE Employee_Skills SET Active = @Active, Rate = @Rate WHERE EmployeeId = @EmployeeId AND SkillId = @SkillId";
        public string Employee { get; } = "SELECT E.Id, D.Nombre AS Department, J.CargoID AS JobId, J.Nombre AS JobName, J.Descripcion AS JobProfile, E.GeneralId,  E.AcademicId,  ES.Id AS StatusId,  ES.Name AS StatusName,  MS.Id AS MaritalStatusId, MS.Name AS MaritalStatusName, DT.Id AS DocTypeId,  DT.Name AS DocTypeName, C.Id AS DocIssueCityId,  C.Name AS DocIssueCityName,  CL.Hex AS ColorHex,  E.Doc, E.DocIssueDate,  E.Name,  E.Sex, E.BirthDate, E.Rh, E.CorpCellPhone, E.CellPhone, E.Phone, E.Email, CONCAT('https://hrprueba.s3.us-east-2.amazonaws.com/', E.PhotoUrl) AS PhotoUrl, CT.Id AS ContractTypeId, CT.Name AS ContractTypeName, BE.Id AS BankingEntityId, BE.Name AS BankingEntityName, JC.Id AS JobCityId,  JC.Name AS JobCityName, E.EmploymentDate, E.BankAccount, E.BankAccountType, E.HasVaccine, E.VaccineMaker, E.VaccineDose, E.HasVaccineBooster FROM usuarios U INNER JOIN Employee E ON U.UsuarioIdOpcional = E.Id LEFT JOIN Employee_Status ES ON ES.Id = E.StatusId  LEFT JOIN Cargos J ON U.CargoID = J.CargoID  LEFT JOIN Roles D ON D.RolID = U.RolID  LEFT JOIN Color CL ON CL.Id = D.ColorId LEFT JOIN Marital_Status MS ON MS.Id = E.MaritalStatusId LEFT JOIN Doc_Type DT ON DT.Id = E.DocTypeId  LEFT JOIN City C ON C.Id = E.DocIssueCityId LEFT JOIN Contract_Type CT ON CT.Id = E.ContractTypeId LEFT JOIN Banking_Entity BE ON BE.Id = E.BankingEntityId LEFT JOIN City JC ON JC.Id = E.JobCityId WHERE E.Id = @EmployeeId";
        public string EmployeeGeneral { get; } = "SELECT EG.Id, E.Id AS EmployeeId, C.Id AS CityId, C.Name AS CityName, HT.Id AS HousingTypeId, HT.Name AS HousingTypeName, EG.EmergencyContactName, EG.EmergencyContactPhone, EG.EmergencyContactRelationship, EG.Dependents, EG.DependentsUnder9, EG.Address, EG.Neighborhood, EG.HousingTime, EG.SocioeconomicStatus, EG.Eps, EG.Arl, EG.Afp, EG.RecommendedBy, EG.Description, TP.Id AS TransportationId, TP.Name AS TransportationName, EG.LicensePlate, EG.VehicleMark, EG.VehicleModel, EG.LicenseNumber, EG.LicenseCategory, EG.LicenseValidity, EG.SOATExpirationDate, EG.RTMExpirationDate, EG.VehicleOwnerName, EG.ContributorType FROM Employee_General EG INNER JOIN Employee E ON E.GeneralId = EG.Id LEFT JOIN Housing_Type HT ON HT.Id = EG.HousingTypeId LEFT JOIN City C ON C.Id = EG.CityId LEFT JOIN Transportation TP ON EG.TransportationId = TP.Id WHERE E.Id = @EmployeeId";
        public string EmployeeAcademic { get; } = "SELECT EA.Id, E.Id AS EmployeeId, EL.Id AS EducationalLevelId, EL.Name AS EducationalLevelName, EA.Career FROM Employee_Academic EA INNER JOIN Employee E ON E.AcademicId = EA.Id LEFT JOIN Educational_Level EL ON EL.Id = EA.EducationalLevelId WHERE E.Id = @EmployeeId";
        public string EmployeeSkillsNew { get; } = "SELECT S.Id AS SkillId, S.Name AS SkillName FROM Skill S";
        public string EmployeeKnowledgeNew { get; } = "SELECT K.Id AS KnowledgeId, K.Name AS KnowledgeName FROM Knowledge K";
        public string EmployeeSkills { get; } = "SELECT ES.EmployeeId, S.Id AS SkillId, S.Name AS SkillName, ES.Active, ES.Rate FROM Skill S LEFT JOIN Employee_Skills ES ON ES.SkillId = S.Id WHERE ES.EmployeeId = @EmployeeId";
        public string EmployeeSons { get; } = "SELECT s.Id,  s.EmployeeGeneralId,  DATE(s.SonBornDate) AS SonBornDate,  s.SonName,   TIMESTAMPDIFF(YEAR, s.SonBornDate, CURDATE()) AS Age FROM   Employee_Sons s WHERE  s.EmployeeGeneralId =@EmployeeId";
        public string EmployeeKnowledge { get; } = "SELECT EK.EmployeeId, K.Id AS KnowledgeId, K.Name AS KnowledgeName, EK.Active, EK.Rate FROM Knowledge K LEFT JOIN Employee_Knowledges EK ON EK.KnowledgeId = K.Id WHERE EK.EmployeeId = @EmployeeId";
        public string EmployeeFileTypes { get; } = "SELECT FT.Id, FT.LevelId, FT.Name FROM Employee_File_Type FT ORDER BY FT.LevelId";
        public string EmployeeFile { get; } = "SELECT F.Id, F.EmployeeId, F.Department, F.Name, F.City, F.Level1, F.Level2, F.Level3, CONCAT('https://hrprueba.s3.us-east-2.amazonaws.com/', F.Url) AS Url, F.FileName FROM Employee_File F WHERE EmployeeId = @EmployeeId";
        public string EmployeeAddSon { get; } = "insert into Employee_Sons (EmployeeGeneralId, SonBornDate,SonName) values (@employeeGeneralId, @sonBornDate, @sonName)";
        public string EmployeeUpdateSon { get; } = "update Employee_Sons set EmployeeGeneralId=@EmployeeGeneralId, SonBornDate=@sonBornDate,SonName=@sonName where Id=@id";
        public string EmployeeDelSon { get; } = "delete from Employee_Sons where id=@id";
    }
}