namespace Api.Queries
{
    public class AbsenceQueries
    {
        public string UserById { get; } = "SELECT U.UsuarioID Id, U.Nombre UserName, E.Id AS EmployeeId, E.Name, J.CargoID AS JobId, J.Nombre AS JobName, D.RolID AS DepartmentId, D.Nombre AS DepartmentName, E.JobCityId AS CityId, C.Name AS CityName, U.JefeId AS ReportJobId, '' AS ReportJobName FROM usuarios U INNER JOIN employee E ON U.UsuarioIdOpcional = E.Id INNER JOIN cargos J ON E.JobId = J.CargoID INNER JOIN roles D ON U.RolID = D.RolID  LEFT JOIN city C ON E.JobCityId = C.Id WHERE U.UsuarioID =  @Id";
        public string Users { get; } = "SELECT U.UsuarioID Id, U.Nombre UserName, E.Id AS EmployeeId, E.Name, J.CargoID AS JobId, J.Nombre AS JobName, D.RolID AS DepartmentId, D.Nombre AS DepartmentName, E.JobCityId AS CityId, C.Name AS CityName, U.JefeId AS ReportJobId, '' AS ReportJobName FROM usuarios U INNER JOIN employee E ON U.UsuarioIdOpcional = E.Id  INNER JOIN cargos J ON E.JobId = J.CargoID INNER JOIN roles D ON U.RolID = D.RolID  LEFT JOIN city C ON E.JobCityId = C.Id   WHERE U.JefeId = @Id ORDER BY U.Nombre DESC";
        public string User { get; } = "SELECT U.UsuarioID AS Id,U.Nombre AS UserName,E.Id AS EmployeeId, E.Name, J.CargoID  AS JobId, J.Nombre AS JobName,D.RolID AS DepartmentId, D.Nombre AS DepartmentName, E.JobCityId AS CityId, C.Name AS CityName,CJ.CargoID AS ReportJobId, CJ.Nombre AS ReportJobName  FROM employee E INNER JOIN usuarios U ON U.UsuarioIdOpcional = E.Id INNER JOIN cargos J ON E.JobId = J.CargoID  INNER JOIN roles D ON U.RolID = D.RolID  LEFT JOIN usuarios RJ ON RJ.JefeId = U.UsuarioID LEFT JOIN cargos CJ ON CJ.CargoID  = RJ.CargoID  LEFT JOIN city C ON E.JobCityId = C.Id  WHERE E.Id = @Id";
        public string Absences { get; } = "WITH Absences AS (SELECT AB.Id, AB.AbsenceTypeId, ABT.Name AS AbsenceTypeName, AB.UserId, U.Nombre UserName, E.Name AS UserEmployeeName, \r\nIF(E.PhotoUrl IS NULL, NULL, CONCAT('https://hrprueba.s3.us-east-2.amazonaws.com/', E.PhotoUrl)) AS UserPhotoUrl,\r\nAB.EmployeeId, E.Name AS EmployeeName, IF(E.PhotoUrl IS NULL, NULL, CONCAT('https://hrprueba.s3.us-east-2.amazonaws.com/', E.PhotoUrl)) AS EmployeePhotoUrl,\r\nE.JobId, J.Nombre AS JobName, D.RolID AS DepartmentId, D.Nombre AS DepartmentName, RJ.UsuarioIdOpcional AS ReportJobId, \r\nAB.Created, AB.Updated, AB.Started, AB.BusinessDays, AB.Finished, AB.Active, AB.Status, AB.Description, \r\nCOUNT(ABA.Id) AS ApprovalQuantity \r\nFROM absence AB \r\nINNER JOIN absence_type ABT ON AB.AbsenceTypeId = ABT.Id \r\nINNER JOIN employee E ON AB.EmployeeId = E.Id \r\nINNER JOIN usuarios U ON U.UsuarioIdOpcional = E.Id \r\nINNER JOIN cargos J ON E.JobId = J.CargoID  \r\nINNER JOIN roles D ON U.RolID = D.RolID \r\nINNER JOIN usuarios RJ ON RJ.UsuarioID  = U.JefeId \r\nINNER JOIN usuarios CJ ON RJ.CargoID  = CJ.CargoID \r\nLEFT JOIN absence_approval ABA ON AB.Id = ABA.AbsenceId \r\nGROUP BY AB.Id, AB.AbsenceTypeId, ABT.Name, AB.UserId, U.Nombre, \r\nE.Name, E.PhotoUrl, AB.EmployeeId, E.Name, E.PhotoUrl, E.JobId, J.Nombre,\r\nD.RolID, D.Nombre, RJ.JefeId, AB.Created, AB.Updated, AB.Started, \r\nAB.BusinessDays, AB.Finished, AB.Active, AB.Status, AB.Description ) \r\nSELECT * FROM Absences WHERE EmployeeId = @Id OR ReportJobId = @JobId";
        public string FindJobId { get; } = "SELECT IF(E.JobId IS NULL, 0, E.JobId) AS JobId FROM employee E WHERE E.Id = @Id";
        public string Absence { get; } = "SELECT AB.Id, AB.AbsenceTypeId, ABT.Name AS AbsenceTypeName, AB.UserId, U.Nombre AS UserName, E.Name AS UserEmployeeName, \r\nIF(E.PhotoUrl IS NULL, NULL, CONCAT('https://hrprueba.s3.us-east-2.amazonaws.com/', E.PhotoUrl)) AS UserPhotoUrl, \r\nAB.EmployeeId, E.Name AS EmployeeName, IF(E.PhotoUrl IS NULL, NULL, \r\nCONCAT('https://hrprueba.s3.us-east-2.amazonaws.com/', E.PhotoUrl)) AS EmployeePhotoUrl,\r\nE.JobId, J.Nombre AS JobName, D.RolID DepartmentId, D.Nombre AS DepartmentName,  RJ.UsuarioIdOpcional AS ReportJobId, \r\nAB.Created, AB.Updated, AB.Started, AB.BusinessDays, AB.Finished, AB.Active, AB.Status, AB.Description,\r\nCOUNT(ABA.Id) AS ApprovalQuantity\r\nFROM absence AB \r\nINNER JOIN absence_type ABT ON AB.AbsenceTypeId = ABT.Id \r\nINNER JOIN employee E ON AB.EmployeeId = E.Id \r\nINNER JOIN usuarios U ON U.UsuarioIdOpcional = E.Id \r\nINNER JOIN cargos J ON E.JobId = J.CargoID  \r\nINNER JOIN roles D ON U.RolID = D.RolID \r\nINNER JOIN usuarios RJ ON RJ.UsuarioID  = U.JefeId \r\nINNER JOIN usuarios CJ ON RJ.CargoID  = CJ.CargoID \r\nLEFT JOIN absence_approval ABA ON AB.Id = ABA.AbsenceId\r\nWHERE AB.Id = @Id\r\nGROUP BY AB.Id, AB.AbsenceTypeId, ABT.Name, AB.UserId, U.Nombre, E.Name, E.PhotoUrl, \r\nAB.EmployeeId, E.Name, E.PhotoUrl, E.JobId, J.Nombre, D.RolID, D.Nombre, RJ.UsuarioIdOpcional, \r\nAB.Created, AB.Updated, AB.Started, AB.BusinessDays, AB.Finished, AB.Active, AB.Status, \r\nAB.Description";
        public string Add { get; } = "INSERT INTO absence (AbsenceTypeId, UserId, EmployeeId, Created, Updated, Started, BusinessDays, Finished, Active, Status, Description) VALUES (@AbsenceTypeId, @UserId, @EmployeeId, @Created, @Updated, @Started, @BusinessDays, @Finished, @Active, @Status, @Description); SELECT LAST_INSERT_ID();";
        public string Edit { get; } = "UPDATE absence SET AbsenceTypeId = @AbsenceTypeId, UserId = @UserId, EmployeeId = @EmployeeId, Updated = @Updated, Started = @Started, BusinessDays = @BusinessDays, Finished = @Finished, Active = @Active, Status = @Status, Description = @Description WHERE Id = @Id";
        public string Approvals { get; } = "SELECT ABA.Id, ABA.AbsenceId, ABA.UserId, U.Nombre AS UserName, EU.Name AS UserEmployeeName,IF(EU.PhotoUrl IS NULL, NULL, CONCAT('https://hrprueba.s3.us-east-2.amazonaws.com/', EU.PhotoUrl)) AS UserPhotoUrl, ABA.Created, ABA.Updated, ABA.Approval, ABA.Description, ABA.IsHRApproval FROM absence_approval ABA LEFT JOIN usuarios U ON ABA.UserId = U.UsuarioIdOpcional LEFT JOIN employee EU ON U.UsuarioIdOpcional = EU.Id WHERE ABA.AbsenceId = @Id ";
        public string AddApproval { get; } = "INSERT INTO absence_approval (AbsenceId, UserId, Created, Updated, Approval, Description, IsHRApproval) VALUES (@AbsenceId, @UserId, @Created, @Updated, @Approval, @Description, @IsHRApproval); SELECT LAST_INSERT_ID();";
        public string EditApproval { get; } = "UPDATE absence_approval SET AbsenceId = @AbsenceId, UserId = @UserId, Updated = @Updated, Approval = @Approval, Description = @Description, IsHRApproval = @IsHRApproval WHERE Id = @Id";
        public string ValidateApproval { get; } = "SELECT ABA.Id FROM absence_approval ABA WHERE ABA.AbsenceId = @Id AND ABA.Approval = 0";
        public string UpdateApproval { get; } = "UPDATE absence SET Status = @Status, Updated = @Updated WHERE Id = @Id";
        public string Files { get; } = "SELECT EF.Id, AFR.AbsenceId, EF.EmployeeId, EF.Department, EF.Name, EF.City, EF.Level1, EF.Level2, EF.Level3, CONCAT('https://hrprueba.s3.us-east-2.amazonaws.com/', EF.Url) AS Url, EF.FileName FROM absence_file_rel AFR INNER JOIN Employee_file EF ON EF.Id = AFR.EmployeeFileId WHERE AFR.AbsenceId = @AbsenceId";
        public string AddFile { get; } = "INSERT INTO absence_file_rel (AbsenceId, EmployeeFileId) VALUES (@AbsenceId, @EmployeeFileId)";
    }
}