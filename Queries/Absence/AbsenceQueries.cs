namespace Api.Queries
{
    public class AbsenceQueries
    {
        public string UserById { get; } = "SELECT U.UsuarioID Id, U.Nombre UserName, E.Id AS EmployeeId, E.Name, J.CargoID AS JobId, J.Nombre AS JobName, D.RolID AS DepartmentId, D.Nombre AS DepartmentName, E.JobCityId AS CityId, C.Name AS CityName, U.JefeId AS ReportJobId, '' AS ReportJobName FROM usuarios U INNER JOIN Employee E ON U.UsuarioIdOpcional = E.Id INNER JOIN cargos J ON E.JobId = J.CargoID INNER JOIN roles D ON U.RolID = D.RolID  LEFT JOIN City C ON E.JobCityId = C.Id WHERE U.UsuarioID = @Id";
        public string Users { get; } = "SELECT U.UsuarioID Id, U.Nombre UserName, E.Id AS EmployeeId, E.Name, J.CargoID AS JobId, J.Nombre AS JobName, D.RolID AS DepartmentId, D.Nombre AS DepartmentName, E.JobCityId AS CityId, C.Name AS CityName, U.JefeId AS ReportJobId, '' AS ReportJobName FROM usuarios U INNER JOIN Employee E ON U.UsuarioIdOpcional = E.Id  INNER JOIN cargos J ON E.JobId = J.CargoID INNER JOIN roles D ON U.RolID = D.RolID  LEFT JOIN City C ON E.JobCityId = C.Id   WHERE U.JefeId = @Id ORDER BY U.Nombre DESC";
        public string User { get; } = "SELECT U.Id, U.UserName, E.Id AS EmployeeId, E.Name, J.Id AS JobId, J.Name AS JobName, D.Id AS DepartmentId, D.Name AS DepartmentName, E.JobCityId AS CityId, C.Name AS CityName, RJ.Id AS ReportJobId, RJ.Name AS ReportJobName FROM Employee E INNER JOIN Job J ON E.JobId = J.Id INNER JOIN Department D ON J.DepartmentId = D.Id LEFT JOIN User_Login U ON U.EmployeeId = E.Id LEFT JOIN Job RJ ON RJ.Id = J.ReportId LEFT JOIN City C ON E.JobCityId = C.Id WHERE E.Id = @Id";
        public string Absences { get; } = "WITH Absences AS (SELECT AB.Id, AB.AbsenceTypeId, ABT.Name AS AbsenceTypeName, AB.UserId, U.UserName, EU.Name AS UserEmployeeName, IF(EU.PhotoUrl IS NULL, NULL, CONCAT('https://hrprueba.s3.us-east-2.amazonaws.com/', EU.PhotoUrl)) AS UserPhotoUrl, AB.EmployeeId, E.Name AS EmployeeName, IF(E.PhotoUrl IS NULL, NULL, CONCAT('https://hrprueba.s3.us-east-2.amazonaws.com/', E.PhotoUrl)) AS EmployeePhotoUrl, E.JobId, J.Name AS JobName, J.DepartmentId, D.Name AS DepartmentName, J.ReportId AS ReportJobId, AB.Created, AB.Updated, AB.Started, AB.BusinessDays, AB.Finished, AB.Active, AB.Status, AB.Description, COUNT(ABA.Id) AS ApprovalQuantity FROM Absence AB INNER JOIN Absence_Type ABT ON AB.AbsenceTypeId = ABT.Id INNER JOIN Employee E ON AB.EmployeeId = E.Id LEFT JOIN Job J ON E.JobId = J.Id LEFT JOIN Department D ON J.DepartmentId = D.Id LEFT JOIN Absence_Approval ABA ON AB.Id = ABA.AbsenceId LEFT JOIN User_Login U ON AB.UserId = U.Id LEFT JOIN Employee EU ON U.EmployeeId = EU.Id GROUP BY AB.Id, AB.AbsenceTypeId, ABT.Name, AB.UserId, U.UserName, EU.Name, EU.PhotoUrl, AB.EmployeeId, E.Name, E.PhotoUrl, E.JobId, J.Name, J.DepartmentId, D.Name, J.ReportId, AB.Created, AB.Updated, AB.Started, AB.BusinessDays, AB.Finished, AB.Active, AB.Status, AB.Description ) SELECT * FROM Absences WHERE EmployeeId = @Id OR ReportJobId = @JobId";
        public string FindJobId { get; } = "SELECT IF(E.JobId IS NULL, 0, E.JobId) AS JobId FROM Employee E WHERE E.Id = @Id";
        public string Absence { get; } = "SELECT AB.Id, AB.AbsenceTypeId, ABT.Name AS AbsenceTypeName, AB.UserId, U.UserName, EU.Name AS UserEmployeeName, IF(EU.PhotoUrl IS NULL, NULL, CONCAT('https://hrprueba.s3.us-east-2.amazonaws.com/', EU.PhotoUrl)) AS UserPhotoUrl, AB.EmployeeId, E.Name AS EmployeeName, IF(E.PhotoUrl IS NULL, NULL, CONCAT('https://hrprueba.s3.us-east-2.amazonaws.com/', E.PhotoUrl)) AS EmployeePhotoUrl, E.JobId, J.Name AS JobName, J.DepartmentId, D.Name AS DepartmentName, J.ReportId AS ReportJobId, AB.Created, AB.Updated, AB.Started, AB.BusinessDays, AB.Finished, AB.Active, AB.Status, AB.Description, COUNT(ABA.Id) AS ApprovalQuantity FROM Absence AB INNER JOIN Absence_Type ABT ON AB.AbsenceTypeId = ABT.Id INNER JOIN Employee E ON AB.EmployeeId = E.Id LEFT JOIN Job J ON E.JobId = J.Id LEFT JOIN Department D ON J.DepartmentId = D.Id LEFT JOIN Absence_Approval ABA ON AB.Id = ABA.AbsenceId LEFT JOIN User_Login U ON AB.UserId = U.Id LEFT JOIN Employee EU ON U.EmployeeId = EU.Id WHERE AB.Id = @Id GROUP BY AB.Id, AB.AbsenceTypeId, ABT.Name, AB.UserId, U.UserName, EU.Name, EU.PhotoUrl, AB.EmployeeId, E.Name, E.PhotoUrl, E.JobId, J.Name, J.DepartmentId, D.Name, J.ReportId, AB.Created, AB.Updated, AB.Started, AB.BusinessDays, AB.Finished, AB.Active, AB.Status, AB.Description";
        public string Add { get; } = "INSERT INTO Absence (AbsenceTypeId, UserId, EmployeeId, Created, Updated, Started, BusinessDays, Finished, Active, Status, Description) VALUES (@AbsenceTypeId, @UserId, @EmployeeId, @Created, @Updated, @Started, @BusinessDays, @Finished, @Active, @Status, @Description); SELECT LAST_INSERT_ID();";
        public string Edit { get; } = "UPDATE Absence SET AbsenceTypeId = @AbsenceTypeId, UserId = @UserId, EmployeeId = @EmployeeId, Updated = @Updated, Started = @Started, BusinessDays = @BusinessDays, Finished = @Finished, Active = @Active, Status = @Status, Description = @Description WHERE Id = @Id";
        public string Approvals { get; } = "SELECT ABA.Id, ABA.AbsenceId, ABA.UserId, U.UserName, EU.Name AS UserEmployeeName, IF(EU.PhotoUrl IS NULL, NULL, CONCAT('https://hrprueba.s3.us-east-2.amazonaws.com/', EU.PhotoUrl)) AS UserPhotoUrl, ABA.Created, ABA.Updated, ABA.Approval, ABA.Description, ABA.IsHRApproval FROM Absence_Approval ABA LEFT JOIN User_Login U ON ABA.UserId = U.Id LEFT JOIN Employee EU ON U.EmployeeId = EU.Id WHERE ABA.AbsenceId = @Id";
        public string AddApproval { get; } = "INSERT INTO Absence_Approval (AbsenceId, UserId, Created, Updated, Approval, Description, IsHRApproval) VALUES (@AbsenceId, @UserId, @Created, @Updated, @Approval, @Description, @IsHRApproval); SELECT LAST_INSERT_ID();";
        public string EditApproval { get; } = "UPDATE Absence_Approval SET AbsenceId = @AbsenceId, UserId = @UserId, Updated = @Updated, Approval = @Approval, Description = @Description, IsHRApproval = @IsHRApproval WHERE Id = @Id";
        public string ValidateApproval { get; } = "SELECT ABA.Id FROM Absence_Approval ABA WHERE ABA.AbsenceId = @Id AND ABA.Approval = 0";
        public string UpdateApproval { get; } = "UPDATE Absence SET Status = @Status, Updated = @Updated WHERE Id = @Id";
        public string Files { get; } = "SELECT EF.Id, AFR.AbsenceId, EF.EmployeeId, EF.Department, EF.Name, EF.City, EF.Level1, EF.Level2, EF.Level3, CONCAT('https://hrprueba.s3.us-east-2.amazonaws.com/', EF.Url) AS Url, EF.FileName FROM Absence_File_Rel AFR INNER JOIN Employee_File EF ON EF.Id = AFR.EmployeeFileId WHERE AFR.AbsenceId = @AbsenceId";
        public string AddFile { get; } = "INSERT INTO Absence_File_Rel (AbsenceId, EmployeeFileId) VALUES (@AbsenceId, @EmployeeFileId)";
    }
}